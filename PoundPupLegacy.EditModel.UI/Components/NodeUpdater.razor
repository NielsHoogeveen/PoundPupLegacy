@inherits ViewerBase
@typeparam T where T: class, Node
@inject IEditService<T> editService
@if (Model is not null) {

    <NodeEditor Model="Model" T="T" />
}
@code {

    [Parameter]
    [EditorRequired]
    public int UrlId { get; set; }

    protected T? Model { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        Model = await editService.GetViewModelAsync(
            urlId: UrlId, 
            userId: UserId, 
            tenantId:TenantId);

        foreach (var tenant in Model!.Tenants) {
            var tenantNode = Model!.TenantNodes.FirstOrDefault(x => x.TenantId == tenant.Id);
            tenant.TenantNode = tenantNode;
        }
    }
}
