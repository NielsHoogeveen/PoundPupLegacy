@inherits ViewerBase
@typeparam TRead where TRead: class, Node
@typeparam TSave where TSave: class, TRead
@inject IEditService<TRead, TSave> editService
@if (Model is not null) {

    <NodeEditor Model="Model" TRead="TRead" TSave="TSave" Title="@Title"/>
}
@code {

    [Parameter]
    [EditorRequired]
    public int UrlId { get; set; }

    protected TRead? Model { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        Model = await editService.GetViewModelAsync(
            urlId: UrlId, 
            userId: UserId, 
            tenantId:TenantId);

        foreach (var tenant in Model!.NodeDetails.Tenants) {
            var tenantNode = Model!.NodeDetails.TenantNodeDetails.TenantNodes.FirstOrDefault(x => x.TenantId == tenant.Id);
            tenant.TenantNode = tenantNode;
        }
    }

    public string Title => $"Update {Model?.NodeDetails.NodeTypeName}";
}
