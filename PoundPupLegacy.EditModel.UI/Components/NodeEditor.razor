@inherits ViewerBase
@typeparam T where T: class, Node
@inject IJSRuntime JSRuntime
@inject IEditService<T> editService

<EditForm Model="@Model" OnSubmit="@HandleSubmit">
    <InputText class="title-editor" id="name" @bind-Value="Model.Title" />
    @if(Model is Nameable nameable) {
        <NameableEditor Model="nameable" />
    }
    @if(Model is SimpleTextNode simpleTextNode){
        <SimpleTextNodeEditor Model="simpleTextNode"/>
    }
    @if(Model is Document document) {
        <DocumentEditor Model="document"/>
    }
    @if (Model is Organization organization) {
        <OrganizationEditor Model="organization" />
    }
    <Tags Elems="Model.Tags" NodeId="Model.NodeId" />
    <TenantNodesEditor Node="@Model" />
    <AttachmentEditor Files="Model.Files" NodeId="Model.NodeId" />
    @if (Model is Locatable locatable) {
        <LocationsEditor Locatable="locatable" />
    }
    <button type="submit">Submit</button>
</EditForm>

@code {
    [Parameter]
    [EditorRequired]
    public required T Model { get; init; }

    private async Task HandleSubmit()
    {
        if (Model is not null) {
            await editService.SaveAsync(Model);
            await JSRuntime.InvokeVoidAsync("reloadNode", Model.UrlId);
        }
    }
}
