@inherits EntityEditorBase<TypeOfAbuser.ToUpdate, TypeOfAbuser.ToCreate, Unit>
@if (Model is not null) {
    <NodeEditor TCreateModel="TypeOfAbuser.ToCreate"
                 TUpdateModel="TypeOfAbuser.ToUpdate"
                 TResolveData="Unit"
                 Model="Model"
                 OnValidationResult="() => Validate()"
                 Title="Edit type of abuser">
        <NodeDetailsEditor 
            Model="TypeOfAbuser.NodeDetails"
            OnTitleChanged="OnTitleChanged"
            @ref=nodeDetailsEditor>
            <Top>
                <NameableEditor Model="TypeOfAbuser.NameableDetails" @ref=nameableEditor/>
            </Top>
            <Middle></Middle>
            <Bottom></Bottom>
        </NodeDetailsEditor>
    </NodeEditor>
}
@code {
    [Parameter]
    [EditorRequired]
    public TypeOfAbuser TypeOfAbuser { get; set; } = default!;

    protected override Resolver<TypeOfAbuser.ToUpdate, TypeOfAbuser.ToCreate, Unit> Model => TypeOfAbuser;

    private NodeDetailsEditor? nodeDetailsEditor;
    private NameableEditor? nameableEditor;

    protected override List<EditorDetailBase?> DetailsEditors => new() {
        nodeDetailsEditor,
        nameableEditor,
    };
    protected override Unit ResolveData => Unit.Instance;

}
