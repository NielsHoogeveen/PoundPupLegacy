@inherits EntityEditorBase<HagueStatus.ToUpdate, HagueStatus.ToCreate, Unit>
@if (Model is not null) {
    <NodeEditor TCreateModel="HagueStatus.ToCreate"
                 TUpdateModel="HagueStatus.ToUpdate"
                 TResolveData="Unit"
                 Model="Model"
                 OnValidationResult="() => Validate()"
                 Title="Edit hague status">
        <NodeDetailsEditor 
            Model="HagueStatus.NodeDetails"
            OnTitleChanged="OnTitleChanged"
            @ref=nodeDetailsEditor>
            <Top>
                <NameableEditor Model="HagueStatus.NameableDetails" @ref=nameableEditor/>
            </Top>
            <Middle></Middle>
            <Bottom></Bottom>
        </NodeDetailsEditor>
    </NodeEditor>
}
@code {
    [Parameter]
    [EditorRequired]
    public HagueStatus HagueStatus { get; set; } = default!;

    protected override Resolver<HagueStatus.ToUpdate, HagueStatus.ToCreate, Unit> Model => HagueStatus;

    private NodeDetailsEditor? nodeDetailsEditor;
    private NameableEditor? nameableEditor;

    protected override List<EditorDetailBase?> DetailsEditors => new() {
        nodeDetailsEditor,
        nameableEditor,
    };
    protected override Unit ResolveData => Unit.Instance;

}
