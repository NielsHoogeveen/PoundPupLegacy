@inherits EditorBase
<div class="organization-fields">
    <div class="form-group">
        <label>Website</label>
        <InputText type="text" @bind-Value="@Model.WebSiteUrl" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText type="text" @bind-Value="@Model.EmailAddress" />
    </div>
    <div class="form-group">
        <label>Established</label>
        <FuzzyDateEditor @bind-Value=" Model.Establishment" />
    </div>
    <div class="form-group">
        <label>Terminated</label>
        <FuzzyDateEditor @bind-Value="Model.Termination" />
    </div>
</div>
<OrganizationOrganizationTypesEditor Model="Model" />
<InterOrganizationalRelationsEditor 
    Relations="Model.InterOrganizationalRelations.ToList()" 
    RelationTypes="Model.InterOrganizationalRelationTypes" 
    Organization="Organization"/>
<PartyPoliticalEntityRelationsEditor 
    PartyTypeName="organization"
    Party="Organization"
    Relations="Model.PartyPoliticalEntityRelations"
    RelationTypes="Model.PartyPoliticalEntityRelationTypes" />
<PersonOrganizationRelationsEditor 
    IsPersonLeading = "false"
    LeadingParty="Organization"
    Relations="Model.PersonOrganizationRelations"
    RelationTypes="Model.PersonOrganizationRelationTypes" />

@code {
    [Parameter]
    [EditorRequired]
    public Organization Model { get; set; } = default!;

    private int? NodeId => Model switch {
        ExistingNode n => n.NodeId,
        _ => null
    };

    public override async Task Validate(ValidationMessageStore validationMessageStore, List<string> invalidIds)
    {
        await Task.CompletedTask;
    }

    public override void OnTitleChange(string title)
    {
        foreach(var relation in Model.PartyPoliticalEntityRelations)
        {
            relation.Party.Name = title;
        };
        foreach(var relation in Model.PersonOrganizationRelations)
        {
            relation.Organization!.Name = title;
        };
        foreach (var relation in Model.InterOrganizationalRelations) {
            //if (relation.OrganizationFrom is not null)
            //{
            //    if (relation.OrganizationFrom.Id.HasValue) {
            //        if (relation.OrganizationFrom.Id == NodeId)
            //        {
            //            relation.OrganizationFrom.Name = title;
            //        }
            //    }
            //    else {
            //        relation.OrganizationFrom.Name = title;
            //    }
            //}
            //if (relation.OrganizationTo is not null) {
            //    if (relation.OrganizationTo.Id.HasValue) {
            //        if (relation.OrganizationTo.Id == NodeId) {
            //            relation.OrganizationTo.Name = title;
            //        }
            //    }
            //    else {
            //        relation.OrganizationTo.Name = title;
            //    }
            //}
        };
        StateHasChanged();
    }

    private OrganizationListItem Organization => new OrganizationListItem {
        Id = NodeId,
        Name = Model.Title
    };
}
