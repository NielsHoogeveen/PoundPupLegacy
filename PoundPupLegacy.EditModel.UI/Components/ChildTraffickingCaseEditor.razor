@inherits EntityEditorBase<ChildTraffickingCase.ToUpdate, ChildTraffickingCase.ToCreate, CountryListItem>
    <NodeEditor TCreateModel="ChildTraffickingCase.ToCreate"
        TUpdateModel="ChildTraffickingCase.ToUpdate"
        Model="Model"
        TResolveData="CountryListItem"
        OnValidationResult="() => Validate()"
        Title="Edit child trafficking case">
    <NodeDetailsEditor 
        Model="ChildTraffickingCase.NodeDetails"
        OnTitleChanged="OnTitleChanged"
        @ref=nodeDetailsEditor>
        <Top>
            <NameableEditor Model="ChildTraffickingCase.NameableDetails" @ref=nameableEditor/>
        </Top>
        <Middle>
            <CaseDetailsEditor CaseDetails="ChildTraffickingCase.CaseDetails" @ref=caseDetailsEditor/>
            <ChildTraffickingCaseDetailsEditor  ChildTraffickingCaseDetails="ChildTraffickingCase.ChildTraffickingCaseDetails" @ref=childTraffickingCaseDetailsEditor />
        </Middle>
        <Bottom>
            <LocatableDetailsEditor LocatableDetails="ChildTraffickingCase.LocatableDetails" @ref=locatableDetailsEditor/>
        </Bottom>
    </NodeDetailsEditor>
</NodeEditor>

@code {
    [Parameter]
    [EditorRequired]
    public UnresolvedChildTraffickingCase ChildTraffickingCase { get; set; } = default!;

    protected override Resolver<ChildTraffickingCase.ToUpdate, ChildTraffickingCase.ToCreate, CountryListItem> Model => ChildTraffickingCase;

    private NodeDetailsEditor? nodeDetailsEditor;
    private NameableEditor? nameableEditor;
    private LocatableDetailsEditor? locatableDetailsEditor;
    private CaseDetailsEditor? caseDetailsEditor;
    private ChildTraffickingCaseDetailsEditor? childTraffickingCaseDetailsEditor;


    protected override List<EditorDetailBase?> DetailsEditors => new() {
        nodeDetailsEditor,
        nameableEditor,
        locatableDetailsEditor,
        caseDetailsEditor,
        childTraffickingCaseDetailsEditor
    };
    protected override CountryListItem ResolveData => childTraffickingCaseDetailsEditor!.CountryListItem!;

}
