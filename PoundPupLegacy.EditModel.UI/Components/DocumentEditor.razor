@inherits EntityEditorBase<Document.ToUpdate, Document.ToCreate, Unit>
@if (Model is not null)
{
    <NodeEditor 
        TCreateModel="Document.ToCreate" 
        TUpdateModel="Document.ToUpdate"
        TResolveData="Unit"
        Model="Model"
        OnValidationResult="() => Validate()"
        Title="Edit blogpost">
        <NodeDetailsEditor 
            Model="Document.NodeDetails" 
            OnTitleChanged="OnTitleChanged"
            @ref=nodeDetailsEditor>
            <Top>
                <SimpleTextNodePropertiesEditor Model="Document" @ref=simpleTextNodePropertiesEditor/>
            </Top>
            <Middle>
                <DocumentDetailsEditor Model="Document.DocumentDetails" />
            </Middle>
        </NodeDetailsEditor>
    </NodeEditor>
}
@code {
    [Parameter]
    [EditorRequired]
    public Document Document { get; set; } = default!;

    protected override Resolver<Document.ToUpdate, Document.ToCreate, Unit> Model => Document;

    private NodeDetailsEditor? nodeDetailsEditor;
    private SimpleTextNodePropertiesEditor? simpleTextNodePropertiesEditor;

    protected override List<EditorDetailBase?> DetailsEditors => new() {
        nodeDetailsEditor,
        simpleTextNodePropertiesEditor
    };
    protected override Unit ResolveData => Unit.Instance;
}
