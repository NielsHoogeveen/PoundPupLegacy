@inherits EditorBase
@if (_relationToEdit is not null) {
    <ModalDialog 
        Title="Add inter-personal relation" 
        Id="inter-personal-relation-dialog" 
        OnOk="OnOk" 
        OnCancel="OnCancel">
        <DialogContent>
            <InterPersonalRelationEditorDialog  
                @bind-Relation="_relationToEdit" 
                RelationTypes="@RelationTypes"
                PersonId="PersonId"/>
        </DialogContent>
    </ModalDialog>
}

<div class="relations">
    <div class="header first">From</div>
    <div class="header">Type</div>
    <div class="header">To</div>
    <div class="header">Start</div>
    <div class="header">End</div>
    <div class="header"></div>
    @foreach(var relation in Relations) {
        <div class="row first">
            @relation.PersonFrom.Name
        </div>
        <div class="row">
            @relation.InterPersonalRelationType.Name
        </div>
        <div class="row">
            @relation.PersonTo.Name
        </div>
        <div class="row">
            @relation.DateFrom
        </div>
        <div class="row">
            @relation.DateTo
        </div>
        <div class="row">
            <button type="button" @onclick="() => EditRelation(relation)">edit</button>
        </div>
    }
</div>
@code {
    [Parameter]
    [EditorRequired]
    public List<InterPersonalRelation> Relations { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public int? PersonId { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public List<InterPersonalRelationTypeListItem> RelationTypes { get; set; } = default!;

    private InterPersonalRelation? _relationToEdit = null;

    public override async Task Validate(ValidationMessageStore validationMessageStore, List<string> invalidIds)
    {
        await Task.CompletedTask;
    }
    public override void OnTitleChange(string title)
    {

    }

    private void EditRelation(InterPersonalRelation relationToEdit)
    {
        _relationToEdit = relationToEdit;
        StateHasChanged();
    }
    private void OnOk()
    {
        _relationToEdit = null;
        StateHasChanged();
    }
    private void OnCancel()
    {
        _relationToEdit = null;
        StateHasChanged();
    }
}
