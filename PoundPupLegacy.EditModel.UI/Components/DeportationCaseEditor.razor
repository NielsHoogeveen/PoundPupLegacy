@inherits EntityEditorBase<DeportationCase.ToUpdate, DeportationCase.ToCreate, Unit>
@if (Model is not null) {
    <NodeEditor TCreateModel="DeportationCase.ToCreate"
                 TUpdateModel="DeportationCase.ToUpdate"
                 Model="Model"
                 TResolveData="Unit"
                 OnValidationResult="() => Validate()"
                 Title="Edit deportation case">
        <NodeDetailsEditor 
            Model="DeportationCase.NodeDetails"
            OnTitleChanged="OnTitleChanged"
            @ref=nodeDetailsEditor>
            <Top>
                <NameableEditor Model="DeportationCase.NameableDetails" @ref=nameableEditor/>
            </Top>
            <Middle>
                <CaseDetailsEditor CaseDetails="DeportationCase.CaseDetails" @ref=caseDetailsEditor/>
            </Middle>
            <Bottom>
                <LocatableDetailsEditor LocatableDetails="DeportationCase.LocatableDetails" @ref=locatableDetailsEditor/>
            </Bottom>
        </NodeDetailsEditor>
    </NodeEditor>
}
@code {
    [Parameter]
    [EditorRequired]
    public DeportationCase DeportationCase { get; set; } = default!;

    protected override Resolver<DeportationCase.ToUpdate, DeportationCase.ToCreate, Unit> Model => DeportationCase;

    private NodeDetailsEditor? nodeDetailsEditor;
    private NameableEditor? nameableEditor;
    private LocatableDetailsEditor? locatableDetailsEditor;
    private CaseDetailsEditor? caseDetailsEditor;


    protected override List<EditorDetailBase?> DetailsEditors => new() {
        nodeDetailsEditor,
        nameableEditor,
        locatableDetailsEditor,
        caseDetailsEditor
    };
    protected override Unit ResolveData => Unit.Instance;
}
