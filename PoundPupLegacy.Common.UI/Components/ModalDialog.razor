@{
        <dialog open class="modal" >
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="btn-close" @onclick="Cancel">&times;</button>
            </div>
            <div class="modal-body">
                @DialogContent
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="Ok">OK</button>
                <button type="button" class="btn" @onclick="Cancel">Cancel</button>
            </div>
        </dialog>
}
@code {
    [Parameter]
    [EditorRequired]
    public RenderFragment DialogContent { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public string? Id { get; set; } 

    [Parameter]
    [EditorRequired]
    public string? Title { get; set; }

    [Parameter]
    [EditorRequired]
    public Action? OnOk { get; set; }

    [Parameter]
    [EditorRequired]
    public Action? OnCancel { get; set; }

    private DisplayState displayState = DisplayState.Closed;

    private enum DisplayState { Open, Closed }


    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
    public void Cancel()
    {
        if (OnCancel is not null) {
            OnCancel();
        }

    }

    public void Ok()
    {
        if(OnOk is not null) {
            OnOk();
        }
    }
}
