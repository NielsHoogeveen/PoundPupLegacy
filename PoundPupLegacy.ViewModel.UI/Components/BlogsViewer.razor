@inherits Viewer
@inject IFetchBlogsService fetchBlogsService
@if(Model is not null){
    <div class="article-with-comments">
        <div class="breadcrum">
            <span class="breadcrum-element">
                <a href="/home">home</a>
            </span>
        </div>

        <div class="blogs-list">
            <label>Author</label>
            <label>Number of posts</label>
            <label>Lastest post</label>
            <label>Avatar</label>
            @foreach(var entry in Model)
            {
                <div><a href="/blog/@entry.Id">@entry.Title</a></div>
                <div>@entry.NumberOfEntries</div>
                <div><a href="/node/@entry.LatestEntryId">@entry.LatestEntryTitle</a></div>
                @if (!string.IsNullOrEmpty(entry.FilePathAvatar))
                {
                    <div><img src="/@entry.FilePathAvatar"/></div>
                }
                else
                {
                    <div> </div>            
                }
        }
        </div>
    </div>
}
@code{
    
    private List<BlogListEntry>? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await fetchBlogsService.FetchBlogs(TenantId);
    }

}
