<span>
    @if (PagerElementType == PagerElementType.Page && Model.PageNumber == PageNumber) {
        <strong>@Label</strong>
    }
    else @if (UserId == 0) 
    { 
        <a href="@Model.Path?@Model.GetQueryString(PageNumber)">@Label</a>
    }
    else
    {
        <a href="#" @onclick="async () => await SelectPage(PageNumber)">@Label</a>
    }
</span>

@code {
    [Parameter]
    [EditorRequired]
    public PagedListSettings Model { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public int PageNumber { get; set; }

    [Parameter]
    [EditorRequired]
    public PagerElementType PagerElementType { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public Func<int, Task> SelectPage { get; set; } = default!;


    [CascadingParameter(Name = "UserId")]
    public int UserId { get; set; }

    private string Label
    {
        get
        {
            switch (PagerElementType)
            {
                case PagerElementType.First:
                    return "« first";
                case PagerElementType.Previous:
                    return "‹ previous";
                case PagerElementType.Next:
                    return "next ›";
                case PagerElementType.Last:
                    return "last »";
                default:
                    return PageNumber.ToString();
            }
        }
    }
}
