@inject IFetchCasesService FetchCasesService
@inherits PagedViewer<NonSpecificCaseListEntry>
<BreadCrumElementViewer Model="BreadCrumElements" />
<TeaserListViewer ListEntries="ListEntries" PagedListSettings="PagedListSettings" SelectPage="SelectPage">
    <h1>Cases</h1>
    <div>
    @foreach(var caseType in CaseTypeListEntries.OrderBy(x => x.Title)) {
        <div class="case-type @caseType.Title.Replace(" ", "-").Replace("'", "")">
            <a href="@caseType.Path">@caseType.Title</a>
            <div>
                @((MarkupString)caseType.Text)
            </div>
        </div>
    }
    </div>
</TeaserListViewer>

@code {

    protected override int PageSize => 10;

    private CaseTypeListEntry[] CaseTypeListEntries { get; set; } = Array.Empty<CaseTypeListEntry>();

    protected override async Task<IPagedList<NonSpecificCaseListEntry>> GetListEntriesAsync()
    {
        var result = await FetchCasesService.FetchCases(
            pageSize: PagedListSettings.PageSize, 
            pageNumber: PagedListSettings.PageNumber, 
            tenantId: TenantId, 
            userId: UserId);
        CaseTypeListEntries = result.CaseTypes;
        return result;
    }
}
