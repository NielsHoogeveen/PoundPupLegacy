@using PoundPupLegacy.Services
@inject ISiteDataService SiteDataService
@inject NotFoundListener NotFoundListener;
@code {

    protected bool CanAccessPage { get; set; } = false;

    [CascadingParameter(Name ="UserId")]
    public int UserId { get; set; }

    [CascadingParameter(Name = "TenantId")]
    public int TenantId { get; set; }

    protected sealed override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected sealed override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var routeAttribute = this.GetType().GetCustomAttributes(true).OfType<Microsoft.AspNetCore.Components.RouteAttribute>().FirstOrDefault()?.Template;
        if(routeAttribute is not null) {
            CanAccessPage = await SiteDataService.HasAccess(
                userId: UserId,
                path: routeAttribute);
        }
        if (!CanAccessPage) {
            NotFoundListener.NotifyNotFound();            
        }
    }
}
