@using PoundPupLegacy.EditModel;
@using PoundPupLegacy.Services;
@inject IEditService<BlogPost> editService;
@inject ILogger<BlogPostCreator> logger;
@inject NavigationManager navigationManager;
@inject IJSRuntime JSRuntime

@if (blogPost is not null)
{
    <style>
        .title-editor {
            width: 100%;
            font-size: 2em;
            font-weight: bold;
            border: none;
            border-bottom: 1px solid black;
            padding: 0.5em;
            margin-bottom: 1em;
        }
    </style>
    <EditForm Model="@blogPost" OnSubmit="@HandleSubmit">
        <InputText class="title-editor" id="name" @bind-Value="blogPost.Title" />
        <CKEditor Id="#editor"
              @bind-Value=@blogPost.Text
            UrlToPostImage=@url>
        </CKEditor>
        <Tags Elems="@blogPost.Tags" NodeId="@blogPost.NodeId" TenantId="@TenantId" />
        <TenantNodesEditor Node="@blogPost" TenantId="@TenantId" />
        <AttachmentEditor Files="blogPost.Files" NodeId="null" />
        <button type="submit">Submit</button>
    </EditForm>
}
@code {
    BlogPost? blogPost;

    string url = "";

    [Parameter]
    public int UserId { get; set; }

    [Parameter]
    public int TenantId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        url = $"{navigationManager.BaseUri}image/upload";
        blogPost = await editService.GetViewModelAsync(UserId, TenantId);
    }

    private async Task HandleSubmit()
    {
        logger.LogInformation(blogPost!.ToString());
        await editService.SaveAsync(blogPost);
        await JSRuntime.InvokeVoidAsync("reloadNode", blogPost.UrlId);
    }

}
