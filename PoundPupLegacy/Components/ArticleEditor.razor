@using PoundPupLegacy.EditModel;
@using PoundPupLegacy.Services;
@inherits NodeEditor
@inject IEditService<Article> editService;
@inject ILogger<ArticleEditor> logger;
@inject NavigationManager navigationManager;
@inject IJSRuntime JSRuntime

@if (article is not null)
{
    <style>
        .title-editor {
            width: 100%;
            font-size: 2em;
            font-weight: bold;
            border: none;
            border-bottom: 1px solid black;
            padding: 0.5em;
            margin-bottom: 1em;
        }
    </style>
    <EditForm Model="@article" OnSubmit="@HandleSubmit">
        <InputText class="title-editor" id="name" @bind-Value="article.Title" />
        <CKEditor Id="#editor"
              @bind-Value=@article.Text
            UrlToPostImage=@url>
        </CKEditor>
        <Tags Elems="@article.Tags" NodeId="article.NodeId"/>
        <TenantNodesEditor  Node="@article" />
        <AttachmentEditor Files="article.Files" NodeId="article.NodeId"/>
        <button type="submit">Submit</button>
    </EditForm>
    
}
@code {
    Article? article;

    string url = "";

    protected override async Task OnInitializedAsync()
    {
        url = $"{navigationManager.BaseUri}image/upload";
        article = await editService.GetViewModelAsync(UrlId, UserId, TenantId);
        foreach(var tenant in article!.Tenants) 
        {
            var tenantNode = article.TenantNodes.FirstOrDefault(x => x.TenantId == tenant.Id);
            tenant.TenantNode = tenantNode;
        }
    }

    private async Task HandleSubmit()
    {
        logger.LogInformation(article!.ToString());
        await editService.SaveAsync(article);
        await JSRuntime.InvokeVoidAsync("reloadNode", article.UrlId);
    }

}
