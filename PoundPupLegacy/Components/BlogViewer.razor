@using PoundPupLegacy.Services
@using PoundPupLegacy.ViewModel.Models
@inherits PagedViewer<BlogPostTeaser>
@inject IFetchBlogService FetchBlogService;
<div class="blog-list">
    <div class="breadcrum">
        <span class="breadcrum-element">
            <a href="/blogs">blogs</a>
        </span>
    </div>
    <article>
        <h1>
            @Name
        </h1>
        <div class="blog-teasers">
            @foreach (var entry in ListEntries)
            {

                <div class="blog-teaser">
                    <h2>
                        <a href="/node/@entry.Id">@entry.Title</a>
                    </h2>
                    <partial name="~/Views/Shared/_Authoring.cshtml" model="@entry.Authoring" />
                    @((MarkupString)entry.Text)
                </div>
            }
        </div>
        <Pager Model="@PagedListSettings" SelectPage="SelectPage"/>
    </article>
</div>
@code{
    [Parameter]
    [EditorRequired]
    public int Id { get; set; }

    private int? PreviousId { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        if (!PreviousId.HasValue) {
            PreviousId = Id;
            return;
        }
        if (PreviousId != Id) {
            await OnInitializedAsync();
        }
    }

    private string Name { get; set; } = string.Empty;

    protected override int PageSize => 10;

    protected override async Task<IPagedList<BlogPostTeaser>?> GetListEntriesAsync()
    {
        var result =  await FetchBlogService.FetchBlog(
            publisherId: Id, 
            tenantId: TenantId, 
            pageNumber: PagedListSettings.PageNumber, 
            pageSize: PagedListSettings.PageSize);
        if (result is not null)
        {
            Name = result.Name;
        }
        return result;
    }
}
