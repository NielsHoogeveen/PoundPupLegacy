@using PoundPupLegacy.Services
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotFoundListener NotFoundListener
@inject ISiteDataService SiteDataService
@inject IUserService UserService

<PageTitle>Pound Pup Legacy</PageTitle>
<CascadingValue Value="HamburgerMenuOpen" Name="HamburgerMenuOpen">
    <CascadingValue Value="UserId" Name="UserId">
        <CascadingValue Value="TenantId" Name="TenantId">
            <Header Logo="@Logo" Subtitle="@SubTitle" />
            <main>
                <HamburgerMenu />
                @if(notFound) {
                    <NotFound />
                }else{
                    <ContentViewer>
                        @Body
                    </ContentViewer>
                }
            </main>
            <Footer Text="@FooterText"/>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>
@code{
    private bool HamburgerMenuOpen { get; set; } = false;

    private int TenantId { get; set; }

    private int UserId { get; set; }

    private bool notFound;

    private string? Logo { get; set; }

    private string? SubTitle { get; set; } 

    private string? FooterText { get; set; }

    protected override void OnInitialized() => NotFoundListener.OnNotFound += SetNotFound;

    void SetNotFound()
    {
        notFound = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        TenantId = SiteDataService.GetTenantId(uri);
        Logo = SiteDataService.GetLogo(TenantId);
        SubTitle = SiteDataService.GetSubTitle(TenantId);
        FooterText = SiteDataService.GetFooterText(TenantId);

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity is not null) 
        {
            UserId = UserService.GetUserId(authState.User);
        }
        else
        {
            UserId = 0;
        }
    }
}

