@using PoundPupLegacy.Services
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotFoundListener NotFoundListener
@inject ISiteDataService SiteDataService
@inject IUserService UserService
<PageTitle>@Title</PageTitle>
<CascadingValue Value="HamburgerMenuOpen" Name="HamburgerMenuOpen">
    <CascadingValue Value="UserId" Name="UserId">
        <CascadingValue Value="TenantId" Name="TenantId">
                <CascadingValue Value="SiteName" Name="SiteName">
                    <Header Logo="@Logo" Subtitle="@SubTitle" />
                    <main>
                        <HamburgerMenu />
                        @if(notFound) {
                            <NotFound />
                        }else{
                            <ContentViewer>
                                @Body
                            </ContentViewer>
                        }
                    </main>
                    <Footer Text="@FooterText"/>
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>
@code{
    private bool HamburgerMenuOpen { get; set; } = false;

    private int TenantId { get; set; }

    private int UserId { get; set; }

    private bool notFound;

    private string? SiteName { get; set; }

    private string? Logo { get; set; }

    private string? SubTitle { get; set; } 

    private string? Title { get; set; }

    private string? FooterText { get; set; }

    protected override void OnInitialized() => NotFoundListener.OnNotFound += SetNotFound;

    void SetNotFound()
    {
        notFound = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        TenantId = SiteDataService.GetTenantId();
        Logo = SiteDataService.GetLogo();
        SubTitle = SiteDataService.GetSubTitle();
        FooterText = SiteDataService.GetFooterText();
        Title = SiteDataService.GetTitle();
        SiteName = SiteDataService.GetName();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity is not null) 
        {
            UserId = await UserService.GetUserId(authState.User);
        }
        else
        {
            UserId = 0;
        }
    }
}

