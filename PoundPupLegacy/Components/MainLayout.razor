@using PoundPupLegacy.Services
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotFoundListener NotFoundListener
@inject ISiteDataService SiteDataService
@inject IUserService UserService
<PageTitle>@Tenant.Title</PageTitle>
<CascadingValue Value="HamburgerMenuOpen" Name="HamburgerMenuOpen">
    <CascadingValue Value="Tenant" Name="Tenant">
        <CascadingValue Value="Tenant.Name" Name="SiteName">
            @if(UserInfo is not null)
            {
                <CascadingValue Value="UserInfo.User" Name="User">
                    <Header Logo="@Tenant.Logo" Subtitle="@Tenant.Subtitle" />
                    <main>
                    @if(UserInfo is UserLookupResponse.ExistingUser existingUser) {
                
                            <HamburgerMenu />
                            @if (notFound) {
                                <NotFound />
                            }
                            else {
                                <ContentViewer>
                                    @Body
                                </ContentViewer>
                            }
                    }
                    @if (UserInfo is UserLookupResponse.NoUser) {
                        <HamburgerMenu />
                        @if (notFound) {
                            <NotFound />
                        }
                        else {
                            <ContentViewer>
                                @Body
                            </ContentViewer>
                        }
                    }
                    </main>
                    <ActiveChatsViewer />
                </CascadingValue>
                @if(UserInfo is UserLookupResponse.NewUser newUser) {
                    <Header Logo="@Tenant.Logo" Subtitle="@Tenant.Subtitle" />
                    <main>
                        <UserRegistration NameIdentifier="@newUser.NameIdentifier" />
                    </main>
                }
            }
            <Footer Text="@Tenant.FooterText" />
        </CascadingValue>
    </CascadingValue>
</CascadingValue>
@code{
    private bool HamburgerMenuOpen { get; set; } = false;

    private Models.Tenant Tenant { get; set; } = default!;

    private UserLookupResponse UserInfo { get; set; } = default!;

    private bool notFound;

    protected override void OnInitialized() => NotFoundListener.OnNotFound += SetNotFound;

    void SetNotFound()
    {
        notFound = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);

        Tenant = SiteDataService.GetTenant();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity is not null) 
        {
            UserInfo = await UserService.GetUserInfo(authState.User);
        }
        else
        {
            UserInfo = new UserLookupResponse.NoUser();
        }
    }
}

