@inject IJSRuntime JSRuntime

@if (DialogContent is not null)
{
    
    <div class="@className" id="@Id" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">@Title</h4>
                    <button type="button" class="btn-close">&times;</button>
                </div>
                <div class="modal-body">
                    @DialogContent
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" @onclick="HandleOk">OK</button>
                    <button class="btn">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}
@code {
    [Parameter]
    public RenderFragment? DialogContent { get; set; }

    [Parameter]
    public string? Id { get; set; } 

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public Action? OnOk { get; set; }

    private string className => displayState == DisplayState.Open ? "modal open" : "modal";

    private DisplayState displayState = DisplayState.Closed;

    private enum DisplayState { Open, Closed }

    public void Show()
    {
        displayState = DisplayState.Open;
        StateHasChanged();
    }

    public void Close()
    {
        displayState = DisplayState.Closed;
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
    public void HandleOk()
    {
        if(OnOk is not null) {
            OnOk();
        }
        Close();
    }
}
