@using PoundPupLegacy.ViewModel.Models
@using PoundPupLegacy.ViewModel.UI.Services
@using PoundPupLegacy.Services
@inherits ViewerBase
@inject IFetchNodeService NodeDataService
@inject INodeAccessService NodeAccessService

@if (Node is not null) {
    <CascadingValue Value="@Id" Name="NodeId">
        <CascadingValue Value="@Node.UrlId" Name="UrlId">
            @if (User.Id == 0) {
                <NodeViewerNotSignedIn Model="@Node" />
            }
            else {
                <NodeViewerSignedIn Model="@Node" />
            }
        </CascadingValue>
    </CascadingValue>
}

@code {
    [Parameter]
    [EditorRequired]
    public int Id { get; set; }

    private ViewModel.Models.Node? Node { get; set; }

    private int? PreviousId { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        if(!PreviousId.HasValue)
        {
            PreviousId = Id;
            return;
        }
        if (PreviousId != Id)
        {
            await OnInitializedAsync();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Node = await NodeDataService.FetchNode(
            id: Id, 
            userId: User.Id, 
            tenantId: Tenant.Id);
        if(User.Id != 0 && Node is not null) {
            await NodeAccessService.Log(User.Id, Tenant.Id, Node.NodeId);
        }
    }
}
