@using PoundPupLegacy.EditModel;
@using PoundPupLegacy.Services;
@using PoundPupLegacy.Common;
@inherits NodeEditor
@inject IEditService<Organization> editService;
@inject ILogger<OrganizationEditor> logger;
@inject NavigationManager navigationManager;
@inject IJSRuntime JSRuntime
@inject ILocationService locationService;

@if (organization is not null)
{
    <style>
        .title-editor {
            width: 100%;
            font-size: 2em;
            font-weight: bold;
            border: none;
            border-bottom: 1px solid black;
            padding: 0.5em;
            margin-bottom: 1em;
        }
    </style>
    <EditForm Model="@organization" OnSubmit="HandleSubmit" class="edit-form">
        
        <InputText class="title-editor" id="name" @bind-Value="organization.Title" />
        <CKEditor Id="#editor"
              @bind-Value=@organization.Description
            UrlToPostImage=@url>
        </CKEditor>
        <div class="organization-organization-types">

        @foreach(var organizationOrganizationType in organization.OrganizationOrganizationTypes) {
            <select>
                @foreach(var organizationType in organization.OrganizationTypes){
                    @if (organizationType.Id == organizationOrganizationType.OrganizationTypeId) {
                        <option selected value="@organizationType.Id">@organizationType.Name</option>
                    }
                    else {
                        <option value="@organizationType.Id">@organizationType.Name</option>
                    }
                }
            </select>
        }
        </div>
    
        <FuzzyDateEditor @bind-Value="organization.Establishment" />
        <FuzzyDateEditor @bind-Value="organization.Termination" />
        
        <Tags Elems="organization.Tags" NodeId="organization.NodeId"/>
        <TenantNodesEditor Node="organization" />
        <AttachmentEditor Files="organization.Files" NodeId="organization.NodeId"/>
        <LocationsEditor Locatable="organization"/>
        
        <button type="submit" style="display: block;">Submit</button>
    
    </EditForm>

}
@code {
    Organization? organization;

    string url = "";

    protected override async Task OnInitializedAsync()
    {

        url = $"{navigationManager.BaseUri}image/upload";
        if (organization is null)
        {
            organization = await editService.GetViewModelAsync(UrlId, UserId, TenantId);
            foreach (var tenant in organization!.Tenants)
            {
                var tenantNode = organization.TenantNodes.FirstOrDefault(x => x.TenantId == tenant.Id);
                tenant.TenantNode = tenantNode;
            }
        }
    }

    private async Task HandleSubmit()
    {
        if (organization is null)
            return;
        foreach (var location in organization.Locations)
        {
            await locationService.ValidateLocationAsync(location);
        }
        await editService.SaveAsync(organization);
        await JSRuntime.InvokeVoidAsync("reloadNode", organization.UrlId);
    }

}
