@using PoundPupLegacy.ViewModel
@using PoundPupLegacy.Views.Shared
@using PoundPupLegacy.Services
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Node
@inject ISiteDataService siteDataService
@{
    var ModelClassName = Model.HasBeenPublished ? "node" : "node node-unpublished";

    <div class="article-with-comments @ModelClassName">


        @if (siteDataService.CanEdit(Model))
        {
            <style>
                input.tab-button {
                    display: none;
                }
                    /* hide radio buttons */
                    input + label {
                        display: inline-block
                    }
                    /* show labels in line */
                    input ~ .tab {
                        display: none
                    }
                /* hide contents */
                /* show contents only for selected tab */
                #tab1:checked ~ .tab.content1,
                #tab2:checked ~ .tab.content2 {
                    display: block;
                    padding: 0;
                }

                input.tab-button + label { /* box with rounded corner */
                    border: 1px solid #999;
                    background: #EEE;
                    padding: 4px 12px;
                    border-radius: 4px 4px 0 0;
                    position: relative;
                    top: 1px;
                }

                input.tab-button:checked + label { /* white background for selected tab */
                    background: #FFF;
                    border-bottom: 1px solid transparent;
                }

                input.tab-button ~ .tab { /* grey line between tab and contents */
                    border-top: 1px solid #999;
                    padding: 12px;
                }
            </style>
            <input class="tab-button" type="radio" name="tabs" id="tab1" checked />
            <label for="tab1">View</label>
            <input class="tab-button" type="radio" name="tabs" id="tab2" />
            <label for="tab2">Edit</label>
        }        <div class=" tab content1">
            <partial name="_BreadCrumElement" model="@Model.BreadCrumElements" />
            @if (!Model.HasBeenPublished)
            {
                <div class="watermark">Unpublished</div>
            }
            <article>
                <div class="title">
                    <h1>@Model.Title</h1>
                </div>
                @if (Model is SimpleTextNode simpleTextNode)
                {
                    <partial name="~/Views/Shared/_Authoring.cshtml" model="@Model.Authoring" />
                    <partial name="_SimpleTextNode" model="@simpleTextNode" />
                }
                @if(Model is Country country)
                {
                    <partial name="_Country" model="@country" />
                }
                @if (Model is Organization organization)
                {
                    <partial name="_Organization" model="@organization" />
                }
                @if (Model is Person person)
                {
                    <partial name="_Person" model="@person" />
                }
                @if (Model is BasicNameable basicNameable)
                {
                    <partial name="_BasicNameable" model="@basicNameable" />
                }
                @if (Model is AbuseCase abuseCase)
                {
                    <partial name="_AbuseCase" model="@abuseCase" />
                }
                @if (Model is ChildTraffickingCase childTraffickingCase)
                {
                    <partial name="_ChildTraffickingCase" model="@childTraffickingCase" />
                }
                @if (Model is CoercedAdoptionCase coercedAdoptionCase)
                {
                    <partial name="_CoercedAdoptionCase" model="@coercedAdoptionCase" />
                }
                @if (Model is DeportationCase deportationCase)
                {
                    <partial name="_DeportationCase" model="@deportationCase" />
                }
                @if (Model is DisruptedPlacementCase disruptedPlacementCase)
                {
                    <partial name="_DisruptedPlacementCase" model="@disruptedPlacementCase" />
                }
                @if (Model is FathersRightsViolationCase fathersRightsViolationCase)
                {
                    <partial name="_FathersRightsViolationCase" model="@fathersRightsViolationCase" />
                }
                @if (Model is WrongfulMedicationCase wrongfulMedicationCase)
                {
                    <partial name="_WrongfulMedicationCase" model="@wrongfulMedicationCase" />
                }
                @if (Model is WrongfulRemovalCase wrongfulRemovalCase)
                {
                    <partial name="_WrongfulRemovalCase" model="@wrongfulRemovalCase" />
                }
                @if (Model is Document document)
                {
                    <partial name="_Document" model="@document" />
                }
                @if (Model is SingleQuestionPoll singleQuestionPoll)
                {
                    <partial name="_SingleQuestionPoll" model="@singleQuestionPoll" />
                }
                @if (Model is MultiQuestionPoll multiQuestionPoll)
                {
                    <partial name="_MultiQuestionPoll" model="@multiQuestionPoll" />
                }
                @if (Model is Subdivision subdivision)
                {
                    <partial name="_Subdivision" model="@subdivision" />
                }
                @if (Model.Files.Any())
                {
                    <partial name="_Files" model="@Model.Files" />
                }
            </article>

            @if (Model.Tags.Any())
            {
                <div class="tags">
                    @foreach (var tag in @Model.Tags)
                    {
                        <span class="tag"><a href="@tag.Path">@tag.Name</a></span>
                    }
                </div>
            }
        </div>
        @if (siteDataService.CanEdit(Model))
        {
            <div class="tab content2">
                <article>
                @if (Model is BlogPost)
                {
                    <component type="typeof(BlogEditor)"
                   render-mode="ServerPrerendered" param-Id="@Model.Id" />

                }
                </article>
            </div>
        }
        @if (@Model.Comments.Any())
        {
            <partial name="_Comments" model="@Model.Comments" />
        }
        
    </div>

}

